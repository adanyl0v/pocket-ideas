// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/uuid/uuid.go

// Package uuid is a generated GoMock package.
package uuid

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGenerator is a mock of Generator interface.
type MockGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockGeneratorMockRecorder
}

// MockGeneratorMockRecorder is the mock recorder for MockGenerator.
type MockGeneratorMockRecorder struct {
	mock *MockGenerator
}

// NewMockGenerator creates a new mock instance.
func NewMockGenerator(ctrl *gomock.Controller) *MockGenerator {
	mock := &MockGenerator{ctrl: ctrl}
	mock.recorder = &MockGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenerator) EXPECT() *MockGeneratorMockRecorder {
	return m.recorder
}

// NewV1 mocks base method.
func (m *MockGenerator) NewV1() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewV1")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewV1 indicates an expected call of NewV1.
func (mr *MockGeneratorMockRecorder) NewV1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewV1", reflect.TypeOf((*MockGenerator)(nil).NewV1))
}

// NewV4 mocks base method.
func (m *MockGenerator) NewV4() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewV4")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewV4 indicates an expected call of NewV4.
func (mr *MockGeneratorMockRecorder) NewV4() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewV4", reflect.TypeOf((*MockGenerator)(nil).NewV4))
}

// NewV6 mocks base method.
func (m *MockGenerator) NewV6() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewV6")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewV6 indicates an expected call of NewV6.
func (mr *MockGeneratorMockRecorder) NewV6() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewV6", reflect.TypeOf((*MockGenerator)(nil).NewV6))
}

// NewV7 mocks base method.
func (m *MockGenerator) NewV7() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewV7")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewV7 indicates an expected call of NewV7.
func (mr *MockGeneratorMockRecorder) NewV7() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewV7", reflect.TypeOf((*MockGenerator)(nil).NewV7))
}
